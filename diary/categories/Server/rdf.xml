<?xml version="1.0" encoding="UTF-8"?>







<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://purl.org/rss/1.0/">

  <channel rdf:about="http://yusuke.homeip.net/diary/">
    <title>侍ズム - 自宅サーバ category</title>
    <link>http://yusuke.homeip.net/diary/</link>
    <description>MacとJavaとアーチェリーと</description>
    <items>
      <rdf:Seq>
        
        <rdf:li resource="http://yusuke.homeip.net/diary/2007/06/13/1181660717569.html" />
        
        <rdf:li resource="http://yusuke.homeip.net/diary/2007/06/12/1181575922878.html" />
        
        <rdf:li resource="http://yusuke.homeip.net/diary/2007/04/14/1176560157667.html" />
        
        <rdf:li resource="http://yusuke.homeip.net/diary/2006/11/12/1163333607867.html" />
        
        <rdf:li resource="http://yusuke.homeip.net/diary/2006/10/25/1161736410173.html" />
        
        <rdf:li resource="http://yusuke.homeip.net/diary/2006/10/25/1161734430000.html" />
        
        <rdf:li resource="http://yusuke.homeip.net/diary/2006/09/15/1158248446726.html" />
        
      </rdf:Seq>
    </items>
  </channel>

  
  <item rdf:about="http://yusuke.homeip.net/diary/2007/06/13/1181660717569.html">
    <title>Mac OSX に MySQL インストール - PostgreSQL とのプチ非互換メモ</title>
    <link>http://yusuke.homeip.net/diary/2007/06/13/1181660717569.html</link>
    
      
        <description>
          &lt;p&gt;&lt;a href=&#034;http://yusuke.homeip.net/diary/2007/06/12/1181575922878.html&#034;&gt;MySQL をインストールした&lt;/a&gt;らあとは自家用掲示板アプリの移植です。&lt;br/&gt;Hibernate とかいったカッコイイものは使っていないので非互換の SQL を手動で直していく必要がありました。&lt;br/&gt;&lt;br/&gt;といっても直す必要があったのは２点だけ。&lt;br/&gt;&lt;br/&gt;・サブクエリのマナー&lt;br/&gt;insert 句の中で select をネストしていた部分が MySQL ではエラーになってしまいました。&lt;br/&gt;&lt;pre class=&#034;codeSample&#034;&gt;mysql&amp;gt; insert into table1 (colmn1,colmun2) values(&#039;value1&#039;,(select count(*) from table1));&lt;br/&gt;ERROR 1093 (HY000): You can&#039;t specify target table &#039;table1&#039; for update in FROM clause&lt;/pre&gt;&lt;br/&gt;そんな複雑なクエリじゃないです。Oracle でもこれは通りますね。&lt;br/&gt;&lt;br/&gt;MySQL では values のかわりに select 句をそのままもってくると良いようです。&lt;br/&gt;&lt;pre class=&#034;codeSample&#034;&gt;mysql&amp;gt; insert into table1 (colmn1,colmun2) select &#039;value1&#039;, count(*) from table1;&lt;br/&gt;Query OK, 1 row affected (0.11 sec)&lt;br/&gt;Records: 1  Duplicates: 0  Warnings: 0&lt;/pre&gt;このクエリは PostgreSQL でも通りました。&lt;br/&gt;&lt;br/&gt;・シーケンスは？&lt;br/&gt;プライマリキーの生成にシーケンスを使っていましたが、MySQL にはシーケンスがないようです。&lt;br/&gt;かわりにテーブル定義時に &lt;a href=&#034;http://dev.mysql.com/doc/refman/4.1/ja/example-auto-increment.html&#034;&gt;&amp;quot;AUTO_INCREMENT&amp;quot;&lt;/a&gt; と指定しておくと値を指定しなくても自動的にインクリメントしてくれる仕組みです。&lt;br/&gt;SQL も一発で済むので楽ですね。&lt;br/&gt;どんな値が入るか事前に知る必要がある場合はシーケンス発生用のテーブルを定義する必要がありそう。&lt;br/&gt;&lt;/p&gt;
        </description>
      
      
    
  </item>
  
  <item rdf:about="http://yusuke.homeip.net/diary/2007/06/12/1181575922878.html">
    <title>Mac OSX に MySQL インストール &amp; 自動起動設定メモ</title>
    <link>http://yusuke.homeip.net/diary/2007/06/12/1181575922878.html</link>
    
      
        <description>
          &lt;p&gt;最近仕事でちょくちょく触るので自宅サーバに MySQL を入れてみました。&lt;br/&gt;PostgreSQL から移行します。&lt;br/&gt;&lt;br/&gt;ので、メモ。&lt;br/&gt;&lt;br/&gt;・MySQL(バイナリ版)のインストール&lt;br/&gt;このテのソフトをバイナリからインストールしたのは初めてかも！？&lt;br/&gt;楽ちんですね。&lt;br/&gt;&lt;pre class=&#034;codeSample&#034;&gt;# cd /usr/local&lt;br/&gt;# gunzip &lt; mysql-5.0.41-osx10.4-i686.tar.gz | tar xvf -&lt;br/&gt;# ln -s mysql-5.0.41-osx10.4-i686 mysql&lt;br/&gt;# cd mysql&lt;br/&gt;# chown -R mysql .&lt;br/&gt;# chgrp -R mysql .&lt;br/&gt;# scripts/mysql_install_db --user=mysql&lt;br/&gt;# chown -R root .&lt;br/&gt;# chown -R mysql data&lt;/pre&gt;&lt;br/&gt;&lt;br/&gt;・自動起動の設定。&lt;br/&gt;/Library/StartupItems/ 以下にあるアイテムはシステム起動時に勝手に呼び出して起動してくれます。&lt;br/&gt;&lt;pre class=&#034;codeSample&#034;&gt;# mkdir /Library/StartupItems/mysql&lt;br/&gt;# cd /Library/StartupItems/mysql&lt;br/&gt;# vi StartupParameters.plist&lt;br/&gt;----------------------------------&lt;br/&gt;{&lt;br/&gt;  Description   = &amp;quot;mysql&amp;quot;;&lt;br/&gt;  Provides      = (&amp;quot;mysql&amp;quot;);&lt;br/&gt;  Requires      = (&amp;quot;Disks&amp;quot;);&lt;br/&gt;  Preference    = &amp;quot;Late&amp;quot;;&lt;br/&gt;  Messages =&lt;br/&gt;  {&lt;br/&gt;    start = &amp;quot;Starting mysql&amp;quot;;&lt;br/&gt;    stop  = &amp;quot;Stopping mysql&amp;quot;;&lt;br/&gt;  };&lt;br/&gt;}&lt;br/&gt;----------------------------------&lt;br/&gt;&lt;br/&gt;# vi mysql&lt;br/&gt;----------------------------------&lt;br/&gt;#!/bin/sh&lt;br/&gt;&lt;br/&gt;. /etc/rc.common&lt;br/&gt;&lt;br/&gt;StartService ()&lt;br/&gt;{&lt;br/&gt;        ConsoleMessage &amp;quot;Starting MySQL server&amp;quot;&lt;br/&gt;        su - mysql -c &#039;/usr/local/mysql/bin/safe_mysqld -u mysql &amp;&#039;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;StopService()&lt;br/&gt;{&lt;br/&gt;        ConsoleMessage &amp;quot;Stopping MySQL server&amp;quot;&lt;br/&gt;        su - mysql -c &#039;/usr/local/mysql/bin/mysqladmin -u mysql shutdown&#039;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;RestartService ()&lt;br/&gt;{&lt;br/&gt;    StopService&lt;br/&gt;    StartService&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;RunService &amp;quot;$1&amp;quot;&lt;br/&gt;----------------------------------&lt;br/&gt;&lt;br/&gt;# pwd&lt;br/&gt;/Library/StartupItems/mysql&lt;br/&gt;# ls&lt;br/&gt;StartupParameters.plist mysql&lt;/pre&gt;&lt;br/&gt;&lt;br/&gt;以上。&lt;br/&gt;&lt;a href=&#034;http://yusuke.homeip.net/diary/2007/06/13/1181660717569.html&#034;&gt;次回は PostgreSQL べったりの自家用掲示板アプリの移植で気がついたことを記します。&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;
        </description>
      
      
    
  </item>
  
  <item rdf:about="http://yusuke.homeip.net/diary/2007/04/14/1176560157667.html">
    <title>Google がサポートするオープンソースの OCR ソフト、OCRopus 速攻レビュー</title>
    <link>http://yusuke.homeip.net/diary/2007/04/14/1176560157667.html</link>
    
      
        <description>
          &lt;p&gt;・Google がサポートするオープンソースの OCR ソフト、OCRopus 速攻レビュー&lt;br/&gt;・&lt;a href=&#034;http://yusuke.homeip.net/diary/2007/04/15/1176574605193.html&#034;&gt;Google + OCRopus がもたらすインパクト &lt;/a&gt;&lt;br/&gt;・&lt;a href=&#034;http://yusuke.homeip.net/diary/2007/04/15/1176574805674.html&#034;&gt;スパム業者 + OCRopus の脅威&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;a href=&#034;http://code.google.com/p/ocropus/&#034;&gt;OCRopus&lt;/a&gt; というオープンソースの OCR ソフトが Google より発表されました。&lt;br/&gt;&lt;br/&gt;・グーグル、文字認識研究OCRopusへ資金提供&lt;br/&gt;&lt;a href=&#034;http://japan.cnet.com/news/media/story/0,2000056023,20346962,00.htm&#034;&gt;http://japan.cnet.com/news/media/story/0,2000056023,20346962,00.htm&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;ちょうど最近フリーで使える OCR ソフトがないか探していたところ。ピッタリのタイミングです。&lt;br/&gt;早速コンパイルしてみました。&lt;br/&gt;Java 屋なので何か効率悪いことしているかもしれませんが参考までにインストールの記録を取っておきます。&lt;br/&gt;環境は MacBook Pro(Core 2 Duo) / Mac OSX 10.4.9。&lt;br/&gt;&lt;br/&gt;・tesseract-ocr のビルド&lt;br/&gt;メインのコンポーネントらしい、tesseract-ocr&lt;br/&gt; をチェックアウト&lt;br/&gt;&lt;div class=&#034;codeSample&#034;&gt;~$ svn checkout http://tesseract-ocr.googlecode.com/svn/trunk/ tesseract-ocr&lt;br/&gt;A    tesseract-ocr/configure&lt;br/&gt;A    tesseract-ocr/image&lt;br/&gt;.&lt;br/&gt;.&lt;br/&gt;.&lt;br/&gt;A    tesseract-ocr/classify/Makefile.am&lt;br/&gt;A    tesseract-ocr/classify/picofeat.cpp&lt;br/&gt;Checked out revision 30.&lt;br/&gt;$&lt;/div&gt;&lt;br/&gt;&lt;div class=&#034;codeSample&#034;&gt;$ cd tesseract-ocr&lt;br/&gt;$ ./configure &lt;br/&gt;checking build system type... i686-apple-darwin8.9.1&lt;br/&gt;checking host system type... i686-apple-darwin8.9.1&lt;br/&gt;checking for cl.exe... no&lt;br/&gt;checking for g++... g++&lt;br/&gt;.&lt;br/&gt;.&lt;br/&gt;config.status: creating config_auto.h&lt;br/&gt;config.status: error: cannot find input file: config/config.h.in&lt;br/&gt;&lt;/div&gt;&lt;br/&gt;失敗。&lt;br/&gt;失敗した場合は runautoconf を読んでリトライしろとのことなので・・&lt;br/&gt;&lt;div class=&#034;codeSample&#034;&gt;$ ./runautoconf &lt;br/&gt;Running aclocal&lt;br/&gt;Running autoheader&lt;br/&gt;Running autoconf&lt;br/&gt;Running automake --add-missing --copy&lt;br/&gt;ccmain/Makefile.am: installing `config/depcomp&#039;&lt;br/&gt;All done.&lt;br/&gt;To build the software now, do something like:&lt;br/&gt;&lt;br/&gt;% mkdir build-directory&lt;br/&gt;% cd build-directory&lt;br/&gt;% ../configure [--with-debug] [...other options]&lt;br/&gt;&lt;/div&gt;&lt;br/&gt;&lt;div class=&#034;codeSample&#034;&gt;$ ./configure &lt;br/&gt;checking build system type... i686-apple-darwin8.9.1&lt;br/&gt;checking host system type... i686-apple-darwin8.9.1&lt;br/&gt;checking for cl.exe... no&lt;br/&gt;checking for g++... g++&lt;br/&gt;checking for C++ compiler default output file name... a.out&lt;br/&gt;checking whether the C++ compiler works... yes&lt;br/&gt;checking whether we are cross compiling... no&lt;br/&gt;checking for suffix of executables...&lt;br/&gt;.&lt;br/&gt;.&lt;br/&gt;.&lt;br/&gt;config.status: creating config_auto.h&lt;br/&gt;config.status: executing depfiles commands&lt;br/&gt;&lt;br/&gt;Configuration is done.&lt;br/&gt;You can now build Tesseract by running:&lt;br/&gt;&lt;br/&gt;% make&lt;/div&gt;&lt;br/&gt;今度は成功。あとは make&lt;br/&gt;&lt;div class=&#034;codeSample&#034;&gt;$ make&lt;br/&gt;make  all-recursive&lt;br/&gt;Making all in ccstruct&lt;br/&gt;source=&#039;blobbox.cpp&#039; object=&#039;blobbox.o&#039; libtool=no \&lt;br/&gt;depfile=&#039;.deps/blobbox.Po&#039; tmpdepfile=&#039;.deps/blobbox.TPo&#039; \&lt;br/&gt;depmode=gcc3 /bin/sh ../config/depcomp \&lt;br/&gt;g++ -DHAVE_CONFIG_H -I. -I. -I..  -I../ccutil -I../cutil -I../image -I../viewer -I/sw/include  -g -O2 -c -o blobbox.o `test -f &#039;blobbox.cpp&#039; || echo &#039;./&#039;`blobbox.cpp&lt;br/&gt;.&lt;br/&gt;.&lt;br/&gt;.&lt;br/&gt;g++ -DHAVE_CONFIG_H -I. -I. -I..  -I../ccutil -I../ccstruct -I../image -I../viewer -I../ccops -I../dict -I../classify -I../display -I../wordrec -I../cutil -I../textord -I/sw/include  -g -O2 -c -o mergenf.o `test -f &#039;mergenf.cpp&#039; || echo &#039;./&#039;`mergenf.cpp&lt;br/&gt;g++  -g -O2  -L/sw/lib -o mftraining  mfTraining.o mergenf.o libtesseract_training.a ../textord/libtesseract_textord.a ../classify/libtesseract_classify.a ../dict/libtesseract_dict.a ../image/libtesseract_image.a ../cutil/libtesseract_cutil.a ../ccstruct/libtesseract_ccstruct.a ../viewer/libtesseract_viewer.a ../ccutil/libtesseract_ccutil.a &lt;br/&gt;Making all in tessdata&lt;br/&gt;make[2]: Nothing to be done for `all&#039;.&lt;br/&gt;make[2]: Nothing to be done for `all-am&#039;.&lt;br/&gt;&lt;br/&gt;$ sudo make install&lt;br/&gt;mkdir /usr/local/share/tessdata&lt;br/&gt; /usr/bin/install -c -m 644 DangAmbigs /usr/local/share/tessdata/DangAmbigs&lt;br/&gt; /usr/bin/install -c -m 644 freq-dawg /usr/local/share/tessdata/freq-dawg&lt;br/&gt; /usr/bin/install -c -m 644 inttemp /usr/local/share/tessdata/inttemp&lt;br/&gt; /usr/bin/install -c -m 644 normproto /usr/local/share/tessdata/normproto&lt;br/&gt; /usr/bin/install -c -m 644 pffmtable /usr/local/share/tessdata/pffmtable&lt;br/&gt; /usr/bin/install -c -m 644 user-words /usr/local/share/tessdata/user-words&lt;br/&gt; /usr/bin/install -c -m 644 word-dawg /usr/local/share/tessdata/word-dawg&lt;br/&gt;make[2]: Nothing to be done for `install-exec-am&#039;.&lt;br/&gt;make[2]: Nothing to be done for `install-data-am&#039;.&lt;/div&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;・aspell のインストール&lt;br/&gt;スペルチェッカらしい。apt-get でインストールしたものはうまく認識されなかったのでソースからインストールした。&lt;br/&gt;&lt;a href=&#034;http://aspell.net/&#034;&gt;http://aspell.net/&lt;/a&gt;&lt;br/&gt;&lt;div class=&#034;codeSample&#034;&gt;$ ./configure&lt;br/&gt;$ make&lt;br/&gt;$ sudo make install&lt;/div&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;・aspell-en のインストール&lt;br/&gt;aspell の英語辞書らしい。&lt;br/&gt;&lt;div class=&#034;codeSample&#034;&gt;$ sudo apt-get install aspell-en&lt;br/&gt;Reading Package Lists... Done&lt;br/&gt;Building Dependency Tree... Done&lt;br/&gt;The following NEW packages will be installed:&lt;br/&gt;  aspell-en &lt;br/&gt;0 packages upgraded, 1 newly installed, 0 to remove and 14  not upgraded.&lt;br/&gt;Need to get 1948kB of archives. After unpacking 4411kB will be used.&lt;br/&gt;Get:1 http://bindist.finkmirrors.net 10.4/release/main aspell-en 0.51-0-11 [1948kB]&lt;br/&gt;Fetched 1948kB in 12s (151kB/s)                                                                                                                                                          &lt;br/&gt;Selecting previously deselected package aspell-en.&lt;br/&gt;(Reading database ... 4605 files and directories currently installed.)&lt;br/&gt;Unpacking aspell-en (from .../aspell-en_0.51-0-11_darwin-i386.deb) ...&lt;br/&gt;Setting up aspell-en (0.51-0-11) ...&lt;/div&gt;&lt;br/&gt;&lt;br/&gt;・libpng のインストール&lt;br/&gt;&lt;a href=&#034;http://prdownloads.sourceforge.net/libpng/libpng-1.2.16.tar.bz2?download&#034;&gt;http://prdownloads.sourceforge.net/libpng/libpng-1.2.16.tar.bz2?download&lt;/a&gt;からソースをダウンロード&lt;br/&gt;&lt;div class=&#034;codeSample&#034;&gt;$ ./configure &lt;br/&gt;checking for a BSD-compatible install... /usr/bin/install -c&lt;br/&gt;checking whether build environment is sane... yes&lt;br/&gt;checking for gawk... no&lt;br/&gt;checking for mawk... no&lt;br/&gt;checking for nawk... no&lt;br/&gt;checking for awk... awk&lt;br/&gt;checking whether make sets $(MAKE)... yes&lt;br/&gt;checking whether to enable maintainer-specific portions of Makefiles... no&lt;br/&gt;checking for gcc... gcc&lt;br/&gt;.&lt;br/&gt;.&lt;br/&gt;config.status: creating Makefile&lt;br/&gt;config.status: creating libpng.pc&lt;br/&gt;config.status: creating libpng-config&lt;br/&gt;config.status: creating config.h&lt;br/&gt;config.status: executing depfiles commands&lt;/div&gt;&lt;br/&gt;&lt;br/&gt;&lt;div class=&#034;codeSample&#034;&gt;$ make&lt;br/&gt;.&lt;br/&gt;.&lt;br/&gt;(cd .libs &amp;&amp; rm -f libpng.3.dylib &amp;&amp; ln -s libpng.3.16.0.dylib libpng.3.dylib)&lt;br/&gt;(cd .libs &amp;&amp; rm -f libpng.dylib &amp;&amp; ln -s libpng.3.16.0.dylib libpng.dylib)&lt;br/&gt;ar cru .libs/libpng.a  libpng_la-png.o libpng_la-pngset.o libpng_la-pngget.o libpng_la-pngrutil.o libpng_la-pngtrans.o libpng_la-pngwutil.o libpng_la-pngread.o libpng_la-pngrio.o libpng_la-pngwio.o libpng_la-pngwrite.o libpng_la-pngrtran.o libpng_la-pngwtran.o libpng_la-pngmem.o libpng_la-pngerror.o libpng_la-pngpread.o libpng_la-pnggccrd.o&lt;br/&gt;ranlib .libs/libpng.a&lt;br/&gt;creating libpng.la&lt;br/&gt;(cd .libs &amp;&amp; rm -f libpng.la &amp;&amp; ln -s ../libpng.la libpng.la)&lt;br/&gt;cp libpng-config libpng12-config&lt;br/&gt;cp libpng.pc libpng12.pc&lt;/div&gt;&lt;br/&gt;&lt;div class=&#034;codeSample&#034;&gt;$ sudo make install&lt;br/&gt;Password:&lt;br/&gt;test -z &#034;/usr/local/bin&#034; || /bin/sh ./mkinstalldirs &#034;/usr/local/bin&#034;&lt;br/&gt; /usr/bin/install -c &#039;libpng12-config&#039; &#039;/usr/local/bin/libpng12-config&#039;&lt;br/&gt;test -z &#034;/usr/local/lib&#034; || /bin/sh ./mkinstalldirs &#034;/usr/local/lib&#034;&lt;br/&gt; /bin/sh ./libtool --mode=install /usr/bin/install -c  &#039;libpng12.la&#039; &#039;/usr/local/lib/libpng12.la&#039;&lt;br/&gt;/usr/bin/install -c .libs/libpng12.0.16.0.dylib /usr/local/lib/libpng12.0.16.0.dylib&lt;br/&gt;(cd /usr/local/lib &amp;&amp; { ln -s -f libpng12.0.16.0.dylib libpng12.0.dylib || { rm -f libpng12.0.dylib &amp;&amp; ln -s libpng12.0.16.0.dylib libpng12.0.dylib; }; })&lt;br/&gt;(cd /usr/local/lib &amp;&amp; { ln -s -f libpng12.0.16.0.dylib libpng12.dylib || { rm -f libpng12.dylib &amp;&amp; ln -s libpng12.0.16.0.dylib libpng12.dylib; }; })&lt;br/&gt;/usr/bin/install -c .libs/libpng12.lai /usr/local/lib/libpng12.la&lt;br/&gt;/usr/bin/install -c .libs/libpng12.a /usr/local/lib/libpng12.a&lt;br/&gt;chmod 644 /usr/local/lib/libpng12.a&lt;br/&gt;ranlib /usr/local/lib/libpng12.a&lt;br/&gt;.&lt;br/&gt;.&lt;br/&gt;.&lt;br/&gt;make  install-data-hook&lt;br/&gt;cd /usr/local/include; rm -f png.h pngconf.h&lt;br/&gt;cd /usr/local/include; ln -s libpng12/png.h png.h&lt;br/&gt;cd /usr/local/include; ln -s libpng12/pngconf.h pngconf.h&lt;br/&gt;cd /usr/local/lib/pkgconfig; rm -f libpng.pc&lt;br/&gt;cd /usr/local/lib/pkgconfig; ln -s libpng12.pc libpng.pc&lt;/div&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;libtool のダウンロード、インストール。libjpeg のビルドに必要だった。&lt;br/&gt;&lt;a href=&#034;http://www.gnu.org/software/libtool/&#034;&gt;http://www.gnu.org/software/libtool/&lt;/a&gt;&lt;br/&gt;&lt;div class=&#034;codeSample&#034;&gt;$./configure&lt;br/&gt;$ make&lt;br/&gt;$ sudo make install&lt;/div&gt;&lt;br/&gt;&lt;br/&gt;・libjpeg のインストール&lt;br/&gt;apt-get でインストールしたけど、ocropus の configure でヘッダがみつからないと言われたので&lt;a href=&#034;http://www.ijg.org/files/&#034;&gt;http://www.ijg.org/files/&lt;/a&gt;からソースをダウンロードしてインストール。&lt;br/&gt;manとか man1 というディレクトリがないというエラーがでたのでとりあえず作ったらインストールできた。&lt;br/&gt;&lt;div class=&#034;codeSample&#034;&gt;$ ./configure --enable-shared&lt;br/&gt;$ ln -s /usr/local/bin/libtool  ./&lt;br/&gt;$ make&lt;br/&gt;$ sudo mkdir /usr/local/man&lt;br/&gt;$ sudo mkdir /usr/local/man/man1&lt;br/&gt;$ sudo make install&lt;br/&gt;/usr/bin/install -c cjpeg /usr/local/bin/cjpeg&lt;br/&gt;/usr/bin/install -c djpeg /usr/local/bin/djpeg&lt;br/&gt;/usr/bin/install -c jpegtran /usr/local/bin/jpegtran&lt;br/&gt;/usr/bin/install -c rdjpgcom /usr/local/bin/rdjpgcom&lt;br/&gt;/usr/bin/install -c wrjpgcom /usr/local/bin/wrjpgcom&lt;br/&gt;/usr/bin/install -c -m 644 ./cjpeg.1 /usr/local/man/man1/cjpeg.1&lt;br/&gt;/usr/bin/install -c -m 644 ./djpeg.1 /usr/local/man/man1/djpeg.1&lt;br/&gt;/usr/bin/install -c -m 644 ./jpegtran.1 /usr/local/man/man1/jpegtran.1&lt;br/&gt;/usr/bin/install -c -m 644 ./rdjpgcom.1 /usr/local/man/man1/rdjpgcom.1&lt;br/&gt;/usr/bin/install -c -m 644 ./wrjpgcom.1 /usr/local/man/man1/wrjpgcom.1&lt;/div&gt;&lt;br/&gt;&lt;br/&gt;libtiff も必要らしい。&lt;br/&gt;&lt;a href=&#034;http://dl.maptools.org/dl/libtiff/&#034;&gt;http://dl.maptools.org/dl/libtiff/&lt;/a&gt;&lt;br/&gt;&lt;div class=&#034;codeSample&#034;&gt;$ ./configure&lt;br/&gt;$ make&lt;br/&gt;$ sudo make install&lt;/div&gt;&lt;br/&gt;&lt;br/&gt;&lt;div class=&#034;codeSample&#034;&gt;$ svn checkout http://ocropus.googlecode.com/svn/trunk/ ocropus&lt;br/&gt;A    ocropus/run-check&lt;br/&gt;A    ocropus/configure&lt;br/&gt;A    ocropus/ocr-utils&lt;br/&gt;A    ocropus/ocr-utils/test-ocr-utils.cc&lt;br/&gt;A    ocropus/ocr-utils/ocr-utils.cc&lt;br/&gt;A    ocropus/ocr-utils/Jamfile&lt;br/&gt;A    ocropus/ocr-utils/ocr-u&lt;br/&gt;.&lt;br/&gt;.&lt;br/&gt;.&lt;br/&gt;A    ocropus/ocr-tesseract/Jamfile&lt;br/&gt;A    ocropus/ocr-tesseract/test-list&lt;br/&gt;A    ocropus/ocr-tesseract/README&lt;br/&gt;A    ocropus/ocr-tesseract/000002_line_image.png&lt;br/&gt;A    ocropus/ocr-tesseract/test-tesseract.cc&lt;br/&gt;Checked out revision 76.&lt;/div&gt;&lt;br/&gt;&lt;div class=&#034;codeSample&#034;&gt;$ cd ocropus/&lt;br/&gt;$ ./configure&lt;br/&gt;.&lt;br/&gt;.&lt;br/&gt;.&lt;br/&gt;&lt;br/&gt;OK! Now you can build OCRopus by typing &#034;jam&#034;.&lt;br/&gt;If compilation will be successful, you can try this:&lt;br/&gt;   ocropus-cmd/ocropus ocr data-test-pages/alice_1.png | tee output.html&lt;/div&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;調べてみると、jam っていうのはソースコード管理ツールを出している perforce が出しているビルドツールみたい。&lt;br/&gt;Mac OSX に含まれているというけれども見つからなかった。&lt;br/&gt;perforce からダウンロード/makeした。&lt;br/&gt;&lt;a href=&#034;http://www.perforce.com/jam/jam.html&#034;&gt;http://www.perforce.com/jam/jam.html&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;div class=&#034;codeSample&#034;&gt;$ ~/jam/bin.macosxx86/jam &lt;br/&gt;...found 337 target(s)...&lt;br/&gt;...updating 91 target(s)...&lt;br/&gt;C++ imgio/io_pbm.o &lt;br/&gt;C++ imgio/io_png.o &lt;br/&gt;C++ imgio/io_jpeg.o &lt;br/&gt;C++ imgio/autoinvert.o &lt;br/&gt;C++ imgio/imgio.o &lt;br/&gt;Archive imgio/libimgio.a &lt;br/&gt;ar: creating archive imgio/libimgio.a&lt;br/&gt;Ranlib imgio/&lt;br/&gt;.&lt;br/&gt;.&lt;br/&gt;Link ocr-engine/test-process &lt;br/&gt;Chmod1 ocr-engine/test-process &lt;br/&gt;C++ ocr-engine/test-spell.o &lt;br/&gt;Link ocr-engine/test-spell &lt;br/&gt;Chmod1 ocr-engine/test-spell &lt;br/&gt;C++ ocropus-cmd/ocr-distance.o &lt;br/&gt;Link ocropus-cmd/ocr-distance &lt;br/&gt;Chmod1 ocropus-cmd/ocr-distance &lt;br/&gt;C++ ocropus-cmd/ocropus.o &lt;br/&gt;GenerateVersion ocropus-cmd/version.cc &lt;br/&gt;C++ ocropus-cmd/version.o &lt;br/&gt;Link ocropus-cmd/ocropus &lt;br/&gt;Chmod1 ocropus-cmd/ocropus &lt;br/&gt;...updated 91 target(s)...&lt;/div&gt;&lt;br/&gt;&lt;br/&gt;ocropus-cmd ディレクトリが出来ていればビルド成功とのこと。&lt;br/&gt;うまく出来ました。&lt;br/&gt;&lt;div class=&#034;codeSample&#034;&gt;$ ls ocropus-cmd/&lt;br/&gt;Jamfile                 ocr-distance            ocropus                 ocropus.cc              smoketest.out           version.cc&lt;br/&gt;README                  ocr-distance.cc         ocropus-adaptive.sh     ocropus.o               test-ocr-simple         version.h&lt;br/&gt;debug                   ocr-distance.o          ocropus-gray.sh         ocropus.sh              test-ocr-simple.png     version.o&lt;/div&gt;&lt;br/&gt;&lt;br/&gt;試しに OCRopus のサイトのスクリーンショットをとって動かしてみました。&lt;br/&gt;&lt;a href=&#034;http://yusuke.homeip.net/diary/images/2007/04/14/screenshot_01-large.jpg&#034; rel=&#034;lightbox&#034;&gt;&lt;img src=&#034;http://yusuke.homeip.net/diary/images/2007/04/14/screenshot_01-thumb.jpg&#034;/&gt;&lt;/a&gt;&lt;br/&gt;スクリーンショット&lt;br/&gt;&lt;br/&gt;&lt;div class=&#034;codeSample&#034;&gt;$ ./ocropus ocr ~/screenshot_01-large.jpg &gt;out.html&lt;br/&gt;OCRopus pre-alpha (sauvola, rast, curved, tesseract, aspell)&lt;br/&gt;Revision: 76; Sun Apr 15 02:16:41 JST 2007; Darwin yusukey.local 8.9.1 Darwin Kernel Version 8.9.1: Thu Feb 22 20:55:00 PST 2007; root:xnu-792.18.15~1/RELEASE_I386 i386 i386&lt;br/&gt;$&lt;/div&gt;&lt;br/&gt;おぉ、動いた！&lt;br/&gt;&lt;br/&gt;読み取り結果は&lt;a href=&#034;http://yusuke.homeip.net/diary/images/2007/04/14/out.html&#034;/&gt;こちら&lt;/a&gt;。&lt;br/&gt;&lt;br/&gt;読み取り精度はまずます。&lt;br/&gt;ぱっとみたところ妙だったのは、&lt;br/&gt;---------&lt;br/&gt;GettingStarted -&amp;gt; Getting5tarted&lt;br/&gt;won&#039;t work -&amp;gt; won`t&lt;br/&gt;a state-of-the-art -&amp;gt; s stateof-theart&lt;br/&gt;---------&lt;br/&gt;といったところ。&lt;br/&gt;あとはカンマとピリオド、ダブルクオーテーションとシングルクオーテーションといった記号の読み分けは弱い感じです。&lt;br/&gt;&lt;/p&gt;
        </description>
      
      
    
  </item>
  
  <item rdf:about="http://yusuke.homeip.net/diary/2006/11/12/1163333607867.html">
    <title>フィードの URL を変えずに RSS/RDF/ATOMフィードに広告を挿入</title>
    <link>http://yusuke.homeip.net/diary/2006/11/12/1163333607867.html</link>
    
      
        <description>
          &lt;p&gt;&lt;a href=&#034;http://www.rssad.jp/mpTop.html&#034;&gt;Trend Match for feeds&lt;/a&gt;というサービスを使ってフィードに広告を入れてみました。&lt;br/&gt;&lt;a href=&#034;http://www.rssad.jp/mpTop.html&#034;&gt;Trend Match&lt;/a&gt; は Google の AdSense と同じくコンテンツの内容を見て適切な広告を埋め込んでくれることになっています。&lt;br/&gt;それなりに読者が興味をもつ広告が表示されればうるさくは感じないと思うんですが・・・どうでしょう。&lt;br/&gt;日本語の処理は強み！と謳っています。&lt;br/&gt;・CNET - &lt;a href=&#034;http://japan.cnet.com/news/media/story/0,2000056023,20088532,00.htm&#034;&gt;コンテンツ連動型RSS広告でブロガーが稼げる--RSS広告社が個人向けで初&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;自分のサイトで用意しているフィードのURLを登録すると、先方で広告入りのフィードを生成してくれるという仕組みになっています。&lt;br/&gt;提供されるフィードのURLをサイトに埋め込めばいいのですが、既存のフィードのURLをサブスクライブしている人には広告が表示されないのが悩ましいです。&lt;br/&gt;&lt;img src=&#034;http://yusuke.homeip.net/diary/images/2006/11/12/original.png&#034;/&gt;&lt;br/&gt;既存のフィード購読のイメージ&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;なので、blogではいつもと違うURLにRSSを生成し、&lt;a href=&#034;http://www.rssad.jp/mpTop.html&#034;&gt;Trend Match&lt;/a&gt; にはそちらを読み込ませるようにしました。&lt;br/&gt;で、いつものフィードからは&lt;a href=&#034;http://www.rssad.jp/mpTop.html&#034;&gt;Trend Match&lt;/a&gt; より提供される広告入りのフィードをリバースプロキシして配信する作戦。&lt;br/&gt;今回は以下の様な簡単なJSPを作って実現しています。&lt;br/&gt;・rss-proxy.jsp&lt;br/&gt;&lt;div class=&#034;codeSample&#034;&gt;&amp;lt;%@ page language=&#034;java&#034; contentType=&#034;text/xml; charset=UTF-8&#034;&lt;br/&gt;import=&#034;java.net.URL,java.net.HttpURLConnection&lt;br/&gt;,java.net.URLEncoder&lt;br/&gt;,java.io.BufferedReader&lt;br/&gt;,java.io.InputStreamReader&#034;&lt;br/&gt; session=&#034;false&#034;%&gt;&amp;lt;%request.setCharacterEncoding(&#034;UTF-8&#034;);&lt;br/&gt; %&amp;gt;&amp;lt;%&lt;br/&gt;URL url = new URL(&#034;広告入りフィードのURL&#034;);&lt;br/&gt;HttpURLConnection con =(HttpURLConnection)url.openConnection();&lt;br/&gt;con.setRequestMethod(&#034;GET&#034;);&lt;br/&gt;con.connect();&lt;br/&gt;BufferedReader bw = new BufferedReader(new InputStreamReader(con.getInputStream(),&#034;UTF-8&#034;));&lt;br/&gt;String line;&lt;br/&gt;StringBuffer buf = new StringBuffer(128);&lt;br/&gt;while(null != (line = bw.readLine())){&lt;br/&gt;buf.append(line).append(&#034;\n&#034;);&lt;br/&gt;}&lt;br/&gt;bw.close();&lt;br/&gt;byte[] buf2 = buf.toString().getBytes(&#034;UTF-8&#034;);&lt;br/&gt;response.setContentLength(buf2.length);&lt;br/&gt;response.getOutputStream().write(buf2);&lt;br/&gt;%&amp;gt;&lt;/div&gt;&lt;br/&gt;つまり[オリジナルフィード(RSS) &gt; Trend Match で広告挿入(RSS) &gt; JSP でリバースプロキシ]という構成になります。&lt;br/&gt;&lt;img src=&#034;http://yusuke.homeip.net/diary/images/2006/11/12/trendmatch.png&#034;/&gt;&lt;br/&gt;オリジナルのURLで広告入りのフィードを配信&lt;br/&gt;&lt;br/&gt;JSP ではなく、Apache の mod_rewrite を使う場合はこんな設定になるでしょうか(検証してません)。&lt;br/&gt;&lt;div class=&#034;codeSample&#034;&gt;RewriteEngine On&lt;br/&gt;RewriteRule ^/blog/rss.xml$ http://rss.rssad.jp/rss/****************&lt;/div&gt;&lt;br/&gt;&lt;br/&gt;こういう柔軟なことができるのは自宅サーバで運用しているblogの強みですね。&lt;br/&gt;最初から Trend Match に対応した blog サービスもあるみたいなので、それらではもっと簡単に実現できるのかもしれません。&lt;br/&gt;&lt;br/&gt;もうひとつ問題になったのはフィードのフォーマットです。&lt;br/&gt;Trend Match では RSS 形式のフィードしか作ってくれません。&lt;br/&gt;ATOM 形式として購読しているリーダに RSS 形式が配信されると混乱してしまうのか、各エントリが２つずつ表示される現象がありました。&lt;br/&gt;自分で Trend Match のフィードを ATOM 形式に変換するのは面倒なので、&lt;a href=&#034;http://www.feedburner.jp/&#034;&gt;FeedBurner&lt;/a&gt;というサービスを利用しました。ここでは無償でフィードを各種フォーマットに変換するサービスがあります。&lt;br/&gt;つまり[オリジナルフィード(RSS) &gt; Trend Match で広告挿入(RSS) &gt; FeedBurner で変換(ATOM)&gt; JSP でリバースプロキシ]という多段プロキシになります。&lt;br/&gt;&lt;img src=&#034;http://yusuke.homeip.net/diary/images/2006/11/12/feedbringer.png&#034;/&gt;&lt;br/&gt;オリジナルのフィードURLで広告入りATOMフィードを配信&lt;br/&gt;&lt;/p&gt;
        </description>
      
      
    
  </item>
  
  <item rdf:about="http://yusuke.homeip.net/diary/2006/10/25/1161736410173.html">
    <title>Logitec の外付け HDD(250GB) 購入</title>
    <link>http://yusuke.homeip.net/diary/2006/10/25/1161736410173.html</link>
    
      
        <description>
          &lt;p&gt;自宅サーバのバックアップにと、USB 接続できる 250GB のハードディスクを楽天市場で購入しました。&lt;br/&gt;・&lt;a href=&#034;http://pt.afl.rakuten.co.jp/c/038479a6.db691fb3/?url=http%3a%2f%2fitem.rakuten.co.jp%2flogitec%2f10000417%2f&#034; target=&#034;_blank&#034;&gt;Logitec アウトレット祭 -【250GB】好きなソフトが1本ダウンロードできるハードディスク 8,381(税込み8,800)円&lt;/a&gt;&lt;br/&gt;&lt;img src=&#034;http://ba.afl.rakuten.co.jp/b/038479a6.db691fb3/&#034; width=&#034;1&#034; height=&#034;1&#034; border=&#034;0&#034;&gt;&lt;br/&gt;&lt;br/&gt;ちょっと古いモデルなのかもしれないけど送料、税込価格は9,325円となかなかお買い得です。&lt;br/&gt;7200RPM/流体軸受けで十分高速、十分静か。&lt;br/&gt;&lt;br/&gt;面白いのは&lt;a href=&#034;http://www2.elecom.co.jp/pickup/2005/sourcenext/&#034;&gt;ソースネクストのソフトを一本(Windows版のみ)&lt;/a&gt;ダウンロードできるシリアルコードが付いていることです。&lt;br/&gt;いくら相当になるのかわかりませんが、ちょうど欲しいソフトがあれば実質8000円弱くらいになる計算でしょうか。&lt;br/&gt;お買い得なのはこのコードの有効期限が12月20日までなので、在庫処分しているからかもしれません。&lt;br/&gt;注文した日はギリギリのタイミングだったのか、すぐに売り切れになっていました。&lt;br/&gt;&lt;/p&gt;
        </description>
      
      
    
  </item>
  
  <item rdf:about="http://yusuke.homeip.net/diary/2006/10/25/1161734430000.html">
    <title>Logitec の外付け HDD(250GB) 購入</title>
    <link>http://yusuke.homeip.net/diary/2006/10/25/1161734430000.html</link>
    
      
        <description>
          &lt;p&gt;Firewire 接続の外付けハードディスクはいくつかあるのですが、自宅サーバに使っている iBook(タンジェリン) は USB ポートしかありません。&lt;br/&gt;自宅サーバのバックアップをちゃんとしないといけないということで、USB 接続できる外付けドライブを探していたのですが、楽天市場でお値打ち品が見つかりました。&lt;br/&gt;・&lt;a href=&#034;http://pt.afl.rakuten.co.jp/c/038479a6.db691fb3/?url=http%3a%2f%2fitem.rakuten.co.jp%2flogitec%2f10000417%2f&#034; target=&#034;_blank&#034;&gt;Logitec アウトレット祭 -【250GB】好きなソフトが1本ダウンロードできるハードディスク 8,381(税込み8,800)円&lt;/a&gt;&lt;br/&gt;&lt;img src=&#034;http://ba.afl.rakuten.co.jp/b/038479a6.db691fb3/&#034; width=&#034;1&#034; height=&#034;1&#034; border=&#034;0&#034;&gt;&lt;br/&gt;&lt;br/&gt;送料、税込価格は9,325円となかなかお買い得です。&lt;br/&gt;ちょっと使ってみたけれども7200RPM/流体軸受けで十分高速、十分静かです。&lt;br/&gt;&lt;br/&gt;面白いのは&lt;a href=&#034;http://www2.elecom.co.jp/pickup/2005/sourcenext/&#034;&gt;ソースネクストのソフトを一本(Windows版のみ)&lt;/a&gt;ダウンロードできるシリアルコードが付いていることです。&lt;br/&gt;いくら相当になるのかわかりませんが、ちょうど欲しいソフトがあれば実質8000円弱くらいになる計算でしょうか。&lt;br/&gt;お買い得なのはこのコードの有効期限が12月20日までなので、在庫処分しているからかもしれません。&lt;br/&gt;注文した日はギリギリのタイミングだったのか、すぐに売り切れになっていました。&lt;br/&gt;&lt;/p&gt;
        </description>
      
      
    
  </item>
  
  <item rdf:about="http://yusuke.homeip.net/diary/2006/09/15/1158248446726.html">
    <title>Pebble - コメントスパム対策 Round 2</title>
    <link>http://yusuke.homeip.net/diary/2006/09/15/1158248446726.html</link>
    
      
        <description>
          &lt;p&gt;・&lt;a href=&#034;http://yusuke.homeip.net/diary/2006/09/11/1157902460315.html&#034;&gt;Pebble - コメントスパム対策&lt;/a&gt;&lt;br/&gt;・Pebble - コメントスパム対策 Round 2&lt;br/&gt;・&lt;a href=&#034;http://yusuke.homeip.net/diary/2006/12/26/1167061479507.html&#034;&gt;Pebble - トラックバックスパム対策&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;先日 &lt;a href=&#034;http://yusuke.homeip.net/diary/2006/09/11/1157902460315.html&#034;&gt;JavaScript の埋め込み&lt;/a&gt;でロボットのスパムコメント対策をしました。&lt;br/&gt;毎日60〜100件のスパムコメントがあったのが、大幅に減りましたがその後も多いと日に10件程度の投稿があります。&lt;br/&gt;コメントをくださっているのは以下の６人の方々。&lt;br/&gt;Jeff : simpsons@yahoo.com &lt;br/&gt;Andreos : support@greenworld.com &lt;br/&gt;Pharmacy : john1980@hotmail.com &lt;br/&gt;Andreos : support@greenworld.com &lt;br/&gt;Online : lover87@mail.ru &lt;br/&gt;Loan : gorodok@hotmail.com &lt;br/&gt;&lt;br/&gt;考えられる理由は３つくらいあります。&lt;br/&gt;1. スパム業者が対策を施した&lt;br/&gt;非常にシンプルな防止策なので、JavaScript は解釈しなくても正しい POST 先さえ人間がロボットに教えてあげれば投稿できます。&lt;br/&gt;しかし費用対効果を考えるとウチのサイトごときに特化した対策をいちいち施すことは考えにくいです。&lt;br/&gt;&lt;br/&gt;2. JavaScript を解釈するロボットがいる&lt;br/&gt;技術上無理な話じゃないですが、本格的なCAPCHAにはかなわないでしょう。&lt;br/&gt;そこまで凝ったロボットをいちいちスパム業者が作るとは考えにくいです。&lt;br/&gt;何しろ非常に安いコストで宣伝することが目的ですから。&lt;br/&gt;&lt;br/&gt;3. POST 先の URI をキャッシュしている&lt;br/&gt;毎回 HTML をクロールしてコメント投稿の URI をパースするのはスパム投稿のスループット上効率が悪いです。&lt;br/&gt;単位時間あたりのスパム投稿数をあげるには前回スパム投稿が成功した URI をキャッシュしておく実装が考えられます。&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;というわけで、現実的には 3. が正解ではないかと思います。&lt;br/&gt;なのでコメントの投稿先の URI を変えてまた様子を見ることにします。&lt;br/&gt;目指すはコメント投稿をする人間に負担を掛けないスパム対策！&lt;br/&gt;#とはいえ人間からのコメントはあんまないんですが・・・。ﾄﾎﾎ&lt;br/&gt;&lt;br/&gt;で、Pebble ではコメント投稿に使うパスは classes/action.properties で指定されているので以下のようにテキトウに書き換えて、対応する JSP(common/jsp/commentForm.jspf) も修正して再デプロイすれば Ok です。&lt;br/&gt;&lt; 11: addComment=pebble.controller.action.AddCommentAction&lt;br/&gt;&gt; 11: noSpamAddComment=pebble.controller.action.AddCommentAction&lt;br/&gt;&lt;br/&gt;これでもダメなら JavaScript を解釈するロボットがいる可能性が高いでしょう。&lt;br/&gt;それはそれで対策を考えてありますが・・・。&lt;br/&gt;スパム業者との知恵比べのようでなんだか楽しくなってきました。&lt;br/&gt;&lt;br/&gt;追記 12/26:&lt;br/&gt;この対策以降コメントスパムは来なくなりました。&lt;br/&gt;&lt;/p&gt;
        </description>
      
      
    
  </item>
  

</rdf:RDF>